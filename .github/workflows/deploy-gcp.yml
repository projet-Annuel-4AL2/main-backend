name: Deploy Django to GCE

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      run: |
        echo '${{ secrets.GCP_SA_KEY }}' > "${HOME}/gcp-key.json"
        gcloud auth activate-service-account --key-file="${HOME}/gcp-key.json"
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

    - name: Authenticate Docker to Google Cloud Registry
      run: |
        echo '${{ secrets.GCP_SA_KEY }}' | docker login -u _json_key --password-stdin https://gcr.io

    - name: Create secrets file
      run: |
        echo "GOOGLE_STORAGE_SERVICE_ACCOUNT_JSON=${{ secrets.GOOGLE_STORAGE_SERVICE_ACCOUNT_JSON }}" >> bytebelt/.env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> bytebelt/.env
        echo "DB_USER=${{ secrets.DB_USER }}" >> bytebelt/.env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> bytebelt/.env
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> bytebelt/.env
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> bytebelt/.env

    - name: Build and Push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/bytebelt-web:$GITHUB_SHA ./bytebelt/
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/bytebelt-web:$GITHUB_SHA

    - name: Start SSH Agent and Add Key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.GCE_SSH_KEY }}

    - name: SSH into GCE and deploy
      run: |
          ssh -T -o StrictHostKeyChecking=no ${{ secrets.GCE_SSH_USER }}@${{ secrets.GCE_INSTANCE_NAME }} << 'EOF'
          echo "Starting deployment script"
          if docker ps -a --format '{{.Names}}' | grep -Eq "^bytebelt-web\$"; then
            docker stop bytebelt-web
            docker rm bytebelt-web
          fi
          IMAGE_NAME="gcr.io/${{ secrets.GCP_PROJECT_ID }}/bytebelt-web:$GITHUB_SHA"
          echo $IMAGE_NAME
          docker pull "gcr.io/${{ secrets.GCP_PROJECT_ID }}/bytebelt-web:$GITHUB_SHA"
          docker images # List images to ensure the pull was successful
          docker run -d --name bytebelt-web -p 80:80 gcr.io/${{ secrets.GCP_PROJECT_ID }}/bytebelt-web:$GITHUB_SHA
          docker ps -a # List all containers to check if the new container is running
          echo "Deployment script finished"
          EOF
#      uses: appleboy/ssh-action@v0.1.3
#      with:
#        host: ${{ secrets.GCE_INSTANCE_NAME }}
#        username: ${{ secrets.GCE_SSH_USER }}
#        key: echo '${{ secrets.GCE_SSH_KEY }}'
#        script: |
#          docker pull gcr.io/${{ secrets.GCP_PROJECT_ID }}/bytebelt-web:$GITHUB_SHA
#          docker stop bytebelt-web || true
#          docker rm bytebelt-web || true
#          docker run -d --name bytebelt-web -p 80:80 gcr.io/${{ secrets.GCP_PROJECT_ID }}/bytebelt-web:$GITHUB_SHA
#          docker exec -it bytebelt-web python3 manage.py migrate
